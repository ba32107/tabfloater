name: Release companion

on:
  workflow_dispatch
  # push:
  #   tags:
  #     - 'v*_companion'

defaults:
  run:
    working-directory: companion

jobs:
  # build-appimage-linux:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build AppImage
  #     run: |
  #       source ./packaging/linux/build_appimage.sh
  #       echo "APPIMAGE_FILENAME=$(basename $_APPIMAGE_FILENAME)" >> $GITHUB_ENV
  #       echo "APPIMAGE_FULL_PATH=$_APPIMAGE_FILENAME" >> $GITHUB_ENV
  #   - name: Upload AppImage to Release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ env.APPIMAGE_FULL_PATH }}
  #       asset_name: ${{ env.APPIMAGE_FILENAME }}
  #       overwrite: true
  #       tag: ${{ github.ref }}
  # upload-ppa-linux:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install dependencies
  #     run: sudo apt-get install cmake debhelper devscripts
  #   - name: Import GPG key
  #     env:
  #       GPG_PRIVATE_KEY: ${{ secrets.TABFLOATER_GPG_PRIVATE_KEY }}
  #     run: echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
  #   - name: Build DEB package and upload to PPA
  #     run: ./packaging/linux/ppa_upload.sh -d
  build-windows-packages:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build packages
      run: |
        ./build.bat --package
        $WIN_INSTALLER_FULL_PATH = (Get-ChildItem -Path dist -Filter "*.msi").Fullname
        $WIN_INSTALLER_FILENAME = (Get-ChildItem -Path dist -Filter "*.msi").Name
        $WIN_PORTABLE_FULL_PATH = (Get-ChildItem -Path dist -Filter "*.zip").Fullname
        $WIN_PORTABLE_FILENAME = (Get-ChildItem -Path dist -Filter "*.zip").Name
        echo "mypath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "WIN_INSTALLER_FULL_PATH=$WIN_INSTALLER_FULL_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "WIN_INSTALLER_FILENAME=$WIN_INSTALLER_FILENAME" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "WIN_PORTABLE_FULL_PATH=$WIN_PORTABLE_FULL_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "WIN_PORTABLE_FILENAME=$WIN_PORTABLE_FILENAME" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Test env vars
      env:
        V1: ${{ env.WIN_INSTALLER_FULL_PATH }}
        V2: ${{ env.WIN_INSTALLER_FILENAME }}
        V3: ${{ env.WIN_PORTABLE_FULL_PATH }}
        V4: ${{ env.WIN_PORTABLE_FILENAME }}
      run: |
        $myvar = "testvar"
        echo "mine $myvar"
        echo "he1 - $V1"
        echo "he2 - $V2"
        echo "he3 - $V3"
        echo "he4 - $V4"
        echo "g1 - ${{ env.WIN_INSTALLER_FULL_PATH }}"
        echo "g2 - ${{ env.WIN_INSTALLER_FILENAME }}"
        echo "g3 - ${{ env.WIN_PORTABLE_FULL_PATH }}"
        echo "g4 - ${{ env.WIN_PORTABLE_FILENAME }}"
        echo "h1 - $WIN_INSTALLER_FULL_PATH"
        echo "h2 - $WIN_INSTALLER_FILENAME"
        echo "h3 - $WIN_PORTABLE_FULL_PATH"
        echo "h4 - $WIN_PORTABLE_FILENAME"
        echo "he1 - $env:V1"
        echo "he2 - $env:V2"
        echo "he3 - $env:V3"
        echo "he4 - $env:V4"
        echo "h1 - $env:WIN_INSTALLER_FULL_PATH"
        echo "h2 - $env:WIN_INSTALLER_FILENAME"
        echo "h3 - $env:WIN_PORTABLE_FULL_PATH"
        echo "h4 - $env:WIN_PORTABLE_FILENAME"


