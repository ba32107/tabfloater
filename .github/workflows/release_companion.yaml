name: Release companion

on:
  workflow_dispatch
  # push:
  #   tags:
  #     - 'v*_companion'

defaults:
  run:
    working-directory: companion

jobs:
  build-appimage-linux:
    runs-on: ubuntu-20.04
    steps:
    - name: Check out TabFloater repo
      uses: actions/checkout@v2
    # - name: Import GPG key
    #   env:
    #     GPG_PRIVATE_KEY: ${{ secrets.TABFLOATER_GPG_PRIVATE_KEY }}
    #   run: |
    #     echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
    #     FINGERPRINT=$(gpg --batch --fingerprint --with-colons | grep "pub" --after-context=1 | tail -1 | cut -d ':' -f 10)
    #     echo "Fingerprint: $FINGERPRINT"
    #     echo "$FINGERPRINT:6:" | gpg --import-ownertrust
    # - name: Build AppImage
    #   run: |
    #     source ./packaging/linux/build_appimage.sh --sign
    #     echo "APPIMAGE_FULL_PATH=$_APPIMAGE_FILENAME" >> $GITHUB_ENV
    # - name: Upload AppImage to Release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: ${{ env.APPIMAGE_FULL_PATH }}
    #     overwrite: true
    #     tag: ${{ github.ref }}
    - name: Checkout GitHub Pages repo
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/${{ github.repository_owner }}.github.io
    - name: Update download versions YAML
      working-directory: _data
      run: |
        wget --no-verbose --show-progress https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
        chmod +x ./yq_linux_amd64
        ./yq_linux_amd64 write --inplace downloads.yml download_url_prefix myurl
        ./yq_linux_amd64 write --inplace downloads.yml companion.linux.version linuxversion1
        ./yq_linux_amd64 write --inplace downloads.yml companion.linux.tag linuxtag1
        ./yq_linux_amd64 write --inplace downloads.yml companion.linux.appimage appimagename1
        ./yq_linux_amd64 write --inplace downloads.yml companion.windows.version winversion1
        ./yq_linux_amd64 write --inplace downloads.yml companion.windows.tag wintag1
        ./yq_linux_amd64 write --inplace downloads.yml companion.windows.installer installer1
        ./yq_linux_amd64 write --inplace downloads.yml companion.windows.portable portable1
        echo "Updated download versions YAML with contents:"
        cat ./downloads.yml
    - name: Commit download versions YAML
      working-directory: _data
      run: |
        git config --global user.name 'TabFloater GitHub Actions'
        git config --global user.email 'github-actions@tabfloater.io'
        git add ./downloads.yml
        git commit -m "Update download versions for release XXX"
        git push
  # upload-ppa-linux:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - name: Check out TabFloater repo
  #     uses: actions/checkout@v2
  #   - name: Install dependencies
  #     run: sudo apt-get install cmake debhelper devscripts
  #   - name: Import GPG key
  #     env:
  #       GPG_PRIVATE_KEY: ${{ secrets.TABFLOATER_GPG_PRIVATE_KEY }}
  #     run: |
  #       echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
  #       FINGERPRINT=$(gpg --batch --fingerprint --with-colons | grep "pub" --after-context=1 | tail -1 | cut -d ':' -f 10)
  #       echo "Fingerprint: $FINGERPRINT"
  #       echo "$FINGERPRINT:6:" | gpg --import-ownertrust
  #   - name: Build DEB package and upload to PPA
  #     run: ./packaging/linux/ppa_upload.sh
  # build-windows-packages:
  #   runs-on: windows-2019
  #   steps:
  #   - name: Check out TabFloater repo
  #     uses: actions/checkout@v2
  #   - name: Build packages
  #     run: |
  #       ./build.bat --package
  #       $WIN_INSTALLER_FULL_PATH = (Get-ChildItem -Path dist -Filter "*.msi").Fullname
  #       $WIN_PORTABLE_FULL_PATH = (Get-ChildItem -Path dist -Filter "*.zip").Fullname
  #       echo "WIN_INSTALLER_FULL_PATH=$WIN_INSTALLER_FULL_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #       echo "WIN_PORTABLE_FULL_PATH=$WIN_PORTABLE_FULL_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
  #   - name: Upload installer to Release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ env.WIN_INSTALLER_FULL_PATH }}
  #       overwrite: true
  #       tag: ${{ github.ref }}
  #   - name: Upload portable package to Release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ env.WIN_PORTABLE_FULL_PATH }}
  #       overwrite: true
  #       tag: ${{ github.ref }}
